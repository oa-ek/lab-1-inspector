// <auto-generated />
using System;
using Inspector.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inspector.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230916234029_AddAndSeedTables")]
    partial class AddAndSeedTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inspector.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A hole in the road",
                            Name = "A hole in the road",
                            OrganizationId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "broke the pipe",
                            Name = "Broke the pipe",
                            OrganizationId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Smoking",
                            Name = "Smoking",
                            OrganizationId = 3
                        });
                });

            modelBuilder.Entity("Inspector.Models.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponceId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Complaints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 17, 2, 40, 28, 961, DateTimeKind.Local).AddTicks(5121),
                            Description = "There are problem with road",
                            OrganizationId = 1,
                            Status = "sent",
                            UserName = "Oksana"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 17, 2, 40, 28, 961, DateTimeKind.Local).AddTicks(5178),
                            Description = "There are problem with water",
                            OrganizationId = 2,
                            Status = "sent",
                            UserName = "Anna"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 17, 2, 40, 28, 961, DateTimeKind.Local).AddTicks(5180),
                            Description = "There are problem with helth",
                            OrganizationId = 3,
                            Status = "sent",
                            UserName = "Alex"
                        });
                });

            modelBuilder.Entity("Inspector.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organization");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Solves problems related to the road surface",
                            Name = "Road Organization"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Solves problems related to water supply",
                            Name = "Water Organization"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Solves problems related to the violation of health care rights",
                            Name = "Health Organization"
                        });
                });

            modelBuilder.Entity("Inspector.Models.Responce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComplaintId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Responce");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComplaintId = 1,
                            CreatedDate = new DateTime(2023, 9, 17, 2, 40, 28, 961, DateTimeKind.Local).AddTicks(5198),
                            Description = "Responce N1",
                            Name = "N1"
                        },
                        new
                        {
                            Id = 2,
                            ComplaintId = 2,
                            CreatedDate = new DateTime(2023, 9, 17, 2, 40, 28, 961, DateTimeKind.Local).AddTicks(5201),
                            Description = "Responce N2",
                            Name = "N2"
                        },
                        new
                        {
                            Id = 3,
                            ComplaintId = 3,
                            CreatedDate = new DateTime(2023, 9, 17, 2, 40, 28, 961, DateTimeKind.Local).AddTicks(5203),
                            Description = "Responce N2",
                            Name = "N3"
                        });
                });

            modelBuilder.Entity("Inspector.Models.Category", b =>
                {
                    b.HasOne("Inspector.Models.Organization", null)
                        .WithMany("Categories")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inspector.Models.Complaint", b =>
                {
                    b.HasOne("Inspector.Models.Organization", null)
                        .WithMany("Complaints")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inspector.Models.Organization", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Complaints");
                });
#pragma warning restore 612, 618
        }
    }
}
